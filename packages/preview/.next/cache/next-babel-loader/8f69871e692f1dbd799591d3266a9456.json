{"ast":null,"code":"var _jsxFileName = \"/home/ggavilan/side/react-icons/packages/preview/src/components/pages/search/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport React from \"react\";\nimport SearchIconSet from \"./search-iconset\";\nexport default function SearchPageComponent() {\n  _s();\n\n  var _this = this;\n\n  var allIcons = ALL_ICONS;\n\n  var _React$useContext = React.useContext(Context),\n      query = _React$useContext.query,\n      results = _React$useContext.results,\n      setResults = _React$useContext.setResults;\n\n  var getTotal = function getTotal(results) {\n    return results ? Object.values(results).reduce(function (p, c) {\n      return p + c;\n    }, 0) : 0;\n  };\n\n  if (query.length > 2) {\n    var hightlightPattern = new RegExp(\"(\".concat(query, \")\"), \"i\");\n    return __jsx(React.Fragment, null, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Results for: \", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, query)), __jsx(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, allIcons.map(function (icon) {\n      return __jsx(SearchIconSet, {\n        key: icon.id,\n        icon: icon,\n        query: query,\n        setResults: setResults,\n        highlightPattern: hightlightPattern,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      });\n    })), getTotal(results) === 0 && __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, \"No icons found\"));\n  }\n\n  return __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, \"Please enter at least 3 characters to search...\");\n}\n\n_s(SearchPageComponent, \"h9py4oXQd1Zc42l95DtkOy7cNL4=\");\n\n_c = SearchPageComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPageComponent\");","map":{"version":3,"sources":["/home/ggavilan/side/react-icons/packages/preview/src/components/pages/search/index.tsx"],"names":["ALL_ICONS","Context","React","SearchIconSet","SearchPageComponent","allIcons","useContext","query","results","setResults","getTotal","Object","values","reduce","p","c","length","hightlightPattern","RegExp","map","icon","id"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAAA;;AAC5C,MAAMC,QAAQ,GAAGL,SAAjB;;AAD4C,0BAGLE,KAAK,CAACI,UAAN,CAAiBL,OAAjB,CAHK;AAAA,MAGpCM,KAHoC,qBAGpCA,KAHoC;AAAA,MAG7BC,OAH6B,qBAG7BA,OAH6B;AAAA,MAGpBC,UAHoB,qBAGpBA,UAHoB;;AAK5C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,OAAD,EAAqB;AACpC,WAAOA,OAAO,GACZG,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuBK,MAAvB,CAA8B,UAACC,CAAD,EAAYC,CAAZ;AAAA,aAA0BD,CAAC,GAAGC,CAA9B;AAAA,KAA9B,EAA+D,CAA/D,CADY,GAEZ,CAFF;AAGD,GAJD;;AAMA,MAAIR,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AACpB,QAAMC,iBAAiB,GAAG,IAAIC,MAAJ,YAAeX,KAAf,QAAyB,GAAzB,CAA1B;AACA,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAJ,CADf,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACc,GAAT,CAAa,UAACC,IAAD;AAAA,aACZ,MAAC,aAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,KAAK,EAAEb,KAHT;AAIE,QAAA,UAAU,EAAEE,UAJd;AAKE,QAAA,gBAAgB,EAAEQ,iBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY;AAAA,KAAb,CADH,CAJF,EAeGP,QAAQ,CAACF,OAAD,CAAR,KAAsB,CAAtB,IAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAf9B,CADF;AAmBD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACD;;GAlCuBJ,mB;;KAAAA,mB","sourcesContent":["import { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport React from \"react\";\n\nimport SearchIconSet from \"./search-iconset\";\n\nexport default function SearchPageComponent() {\n  const allIcons = ALL_ICONS;\n\n  const { query, results, setResults } = React.useContext(Context);\n\n  const getTotal = (results: object) => {\n    return results ? \n      Object.values(results).reduce((p: number, c: number) => p + c, 0) :\n      0\n  }\n\n  if (query.length > 2) {\n    const hightlightPattern = new RegExp(`(${query})`, \"i\");\n    return (\n      <>\n        <h2>\n          Results for: <i>{query}</i>\n        </h2>\n        <div className=\"icons\">\n          {allIcons.map((icon) => (\n            <SearchIconSet\n              key={icon.id}\n              icon={icon}\n              query={query}\n              setResults={setResults}\n              highlightPattern={hightlightPattern}\n            />\n          ))}\n        </div>\n        {getTotal(results) === 0 && <h3>No icons found</h3>}\n      </>\n    );\n  }\n  return <h2>Please enter at least 3 characters to search...</h2>;\n}\n"]},"metadata":{},"sourceType":"module"}