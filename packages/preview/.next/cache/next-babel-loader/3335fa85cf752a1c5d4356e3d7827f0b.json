{"ast":null,"code":"var __jsx = React.createElement;\nimport { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\nconst searchPath = \"/search\";\nexport default function Sidebar() {\n  const iconsList = ALL_ICONS.sort((a, b) => a.name > b.name ? 1 : -1);\n  const router = useRouter();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    query,\n    setQuery,\n    setResults\n  } = React.useContext(Context);\n\n  const onSearch = e => {\n    const query = e.target.value.toLowerCase();\n    router.push({\n      pathname: searchPath,\n      query: {\n        q: query\n      }\n    });\n    setQuery(query);\n    setResults(prevResult => {\n      return {};\n    });\n  };\n\n  const goToSearch = e => {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  const onBlur = event => {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar pt3\"\n  }, __jsx(Heading, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen\n  }), __jsx(\"div\", {\n    className: \"search p2\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"search\",\n    className: \"px2 py1\",\n    placeholder: \"\\uD83D\\uDD0D Search Icons\",\n    onFocus: goToSearch,\n    onBlur: onBlur,\n    onChange: onSearch,\n    value: query\n  })), __jsx(\"ul\", {\n    className: `sidebar--links ${isOpen && \"active\"}`\n  }, __jsx(\"li\", null, __jsx(ActiveLink, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\"\n  }, \"Home\"))), iconsList.map(icon => __jsx(\"li\", {\n    key: icon.id\n  }, __jsx(ActiveLink, {\n    href: {\n      pathname: \"icons\",\n      query: {\n        name: icon.id\n      }\n    }\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\"\n  }, icon.name))))));\n}","map":null,"metadata":{},"sourceType":"module"}