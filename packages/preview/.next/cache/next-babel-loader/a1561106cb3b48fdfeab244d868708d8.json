{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Icon from \"@components/@core/icon\";\nimport loadable from \"@loadable/component\";\nimport React from \"react\";\nimport { getIcons } from \"@utils/getIcons\";\nimport SearchPageIconLoading from \"./loading\";\nexport default function SearchIconSet({\n  icon,\n  query,\n  setResults,\n  highlightPattern\n}) {\n  const IconSet = loadable.lib(() => getIcons(icon.id));\n  return __jsx(IconSet, {\n    fallback: __jsx(SearchPageIconLoading, null)\n  }, ({\n    default: icons\n  }) => {\n    const found = Object.keys(icons).filter(name => name.toLowerCase().includes(query));\n    return __jsx(React.Fragment, null, found.map(name => __jsx(Icon, {\n      key: name,\n      icon: icons[name],\n      name: name,\n      highlightPattern: highlightPattern\n    })), setResults(prevResults => {\n      return prevResults.hasOwnProperty(icon.id) ? prevResults : _objectSpread(_objectSpread({}, prevResults), {}, {\n        [icon.id]: found.length\n      });\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}