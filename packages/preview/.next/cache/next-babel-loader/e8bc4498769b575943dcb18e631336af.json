{"ast":null,"code":"var __jsx = React.createElement;\nimport { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\nvar searchPath = \"/search\";\nexport default function Sidebar() {\n  var iconsList = ALL_ICONS.sort(function (a, b) {\n    return a.name > b.name ? 1 : -1;\n  });\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _React$useContext = React.useContext(Context),\n      query = _React$useContext.query,\n      setQuery = _React$useContext.setQuery,\n      setResults = _React$useContext.setResults;\n\n  var setQueryEveywhere = function setQueryEveywhere(query) {\n    setQuery(query); // Context\n\n    setInputQuery(query); // State for this component\n  };\n\n  var onSearch = function onSearch(e) {\n    var query = e.target.value.toLowerCase();\n    router.push({\n      pathname: searchPath,\n      query: query ? {\n        q: query\n      } : null\n    });\n    setQueryEveywhere(query);\n    setResults(function (prevResult) {\n      return {};\n    });\n  };\n\n  var goToSearch = function goToSearch(e) {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  var onBlur = function onBlur(event) {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar pt3\"\n  }, __jsx(Heading, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen\n  }), __jsx(\"div\", {\n    className: \"search p2\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"search\",\n    className: \"px2 py1\",\n    placeholder: \"\\uD83D\\uDD0D Search Icons\",\n    onFocus: goToSearch,\n    onBlur: onBlur,\n    onChange: onSearch,\n    value: inputQuery !== null ? inputQuery : query\n  })), __jsx(\"ul\", {\n    className: \"sidebar--links \".concat(isOpen && \"active\")\n  }, __jsx(\"li\", null, __jsx(ActiveLink, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\"\n  }, \"Home\"))), iconsList.map(function (icon) {\n    return __jsx(\"li\", {\n      key: icon.id\n    }, __jsx(ActiveLink, {\n      href: {\n        pathname: \"icons\",\n        query: {\n          name: icon.id\n        }\n      }\n    }, __jsx(\"a\", {\n      className: \"rounded px2 py1\",\n      onClick: function onClick(e) {\n        return setQueryEveywhere(\"\");\n      }\n    }, icon.name)));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}