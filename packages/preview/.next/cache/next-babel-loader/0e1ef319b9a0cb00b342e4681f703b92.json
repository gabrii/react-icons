{"ast":null,"code":"var _jsxFileName = \"/home/ggavilan/side/react-icons/packages/preview/src/components/@core/sidebar/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\nvar searchPath = \"/search\";\nexport default function Sidebar() {\n  _s();\n\n  var _this = this;\n\n  var iconsList = ALL_ICONS.sort(function (a, b) {\n    return a.name > b.name ? 1 : -1;\n  });\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _React$useContext = React.useContext(Context),\n      setQuery = _React$useContext.setQuery,\n      setResults = _React$useContext.setResults;\n\n  var onSearch = function onSearch(e) {\n    var query = e.target.value.toLowerCase();\n    router.push({\n      pathname: searchPath,\n      query: {\n        q: query\n      }\n    });\n    setQuery(query); // Context\n\n    setInputQuery(query); // State for this component\n\n    setResults(function (prevResult) {\n      return {};\n    });\n  };\n\n  var goToSearch = function goToSearch(e) {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  var onBlur = function onBlur(event) {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  var clearQuery = function clearQuery(event) {\n    setQueryEveywhere(null);\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar pt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"search p2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"search\",\n    className: \"px2 py1\",\n    placeholder: \"\\uD83D\\uDD0D Search Icons\",\n    onFocus: goToSearch,\n    onBlur: onBlur,\n    onChange: onSearch,\n    value: inputQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(\"ul\", {\n    className: \"sidebar--links \".concat(isOpen && \"active\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(ActiveLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Home\"))), iconsList.map(function (icon) {\n    return __jsx(\"li\", {\n      key: icon.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(ActiveLink, {\n      href: {\n        pathname: \"icons\",\n        query: {\n          name: icon.id\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"rounded px2 py1\",\n      onClick: clearQuery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, icon.name)));\n  })));\n}\n\n_s(Sidebar, \"iqJqIoJ79zt2L4O2/OzJu2Uka0w=\", false, function () {\n  return [useRouter];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/ggavilan/side/react-icons/packages/preview/src/components/@core/sidebar/index.tsx"],"names":["ALL_ICONS","Context","useRouter","React","useState","ActiveLink","Heading","searchPath","Sidebar","iconsList","sort","a","b","name","router","isOpen","setIsOpen","inputQuery","setInputQuery","useContext","setQuery","setResults","onSearch","e","query","target","value","toLowerCase","push","pathname","q","prevResult","goToSearch","asPath","includes","onBlur","event","length","window","history","back","clearQuery","setQueryEveywhere","map","icon","id"],"mappings":"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","sourcesContent":["import { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\n\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\n\nconst searchPath = \"/search\";\n\nexport default function Sidebar() {\n  const iconsList = ALL_ICONS.sort((a, b) => (a.name > b.name ? 1 : -1));\n  const router = useRouter();\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputQuery, setInputQuery] = useState(null);\n\n  const { setQuery, setResults } = React.useContext(Context);\n\n\n  const onSearch = e => {\n    const query = e.target.value.toLowerCase();\n    router.push({ pathname: searchPath, query: { q: query } });\n    setQuery(query); // Context\n    setInputQuery(query); // State for this component\n    setResults(prevResult => {\n      return {}\n    });\n  };\n\n  const goToSearch = e => {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  const onBlur = event => {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  const clearQuery = event => {\n    setQueryEveywhere(null);\n  }\n\n  return (\n    <div className=\"sidebar pt3\">\n      <Heading isOpen={isOpen} setIsOpen={setIsOpen} />\n\n      <div className=\"search p2\">\n        <input\n          type=\"text\"\n          aria-label=\"search\"\n          className=\"px2 py1\"\n          placeholder=\"🔍 Search Icons\"\n          onFocus={goToSearch}\n          onBlur={onBlur}\n          onChange={onSearch}\n          value={inputQuery}\n        />\n      </div>\n\n      <ul className={`sidebar--links ${isOpen && \"active\"}`}>\n        <li>\n          <ActiveLink href=\"/\">\n            <a className=\"rounded px2 py1\">Home</a>\n          </ActiveLink>\n        </li>\n        {iconsList.map(icon => (\n          <li key={icon.id}>\n            <ActiveLink href={{ pathname: \"icons\", query: { name: icon.id } }}>\n              <a className=\"rounded px2 py1\" onClick={clearQuery}>{icon.name}</a>\n            </ActiveLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}