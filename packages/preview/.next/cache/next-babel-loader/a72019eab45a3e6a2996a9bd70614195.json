{"ast":null,"code":"var _jsxFileName = \"/home/ggavilan/side/react-icons/packages/preview/src/components/pages/search/search-iconset.tsx\";\nvar __jsx = React.createElement;\nimport Icon from \"@components/@core/icon\";\nimport loadable from \"@loadable/component\";\nimport React from \"react\";\nimport { getIcons } from \"@utils/getIcons\";\nimport SearchPageIconLoading from \"./loading\";\nexport default function SearchIconSet({\n  icon,\n  query,\n  setResults,\n  highlightPattern\n}) {\n  const IconSet = loadable.lib(() => getIcons(icon.id));\n  return __jsx(IconSet, {\n    fallback: __jsx(SearchPageIconLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, ({\n    default: icons\n  }) => {\n    const found = Object.keys(icons).filter(name => name.toLowerCase().includes(query));\n    return __jsx(React.Fragment, null, found.map(name => __jsx(Icon, {\n      key: name,\n      icon: icons[name],\n      name: name,\n      highlightPattern: highlightPattern,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    })));\n  });\n}","map":{"version":3,"sources":["/home/ggavilan/side/react-icons/packages/preview/src/components/pages/search/search-iconset.tsx"],"names":["Icon","loadable","React","getIcons","SearchPageIconLoading","SearchIconSet","icon","query","setResults","highlightPattern","IconSet","lib","id","default","icons","found","Object","keys","filter","name","toLowerCase","includes","map"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,qBAAP,MAAkC,WAAlC;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAvB,EAAsE;AACnF,QAAMC,OAAO,GAAGT,QAAQ,CAACU,GAAT,CAAa,MAAMR,QAAQ,CAACG,IAAI,CAACM,EAAN,CAA3B,CAAhB;AAEA,SACE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAD,KAAwB;AACvB,UAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EACXI,MADW,CACJC,IAAI,IAAIA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4Bd,KAA5B,CADJ,CAAd;AAEA,WACE,4BACGQ,KAAK,CAACO,GAAN,CAAUH,IAAI,IACb,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,IAAI,EAAEL,KAAK,CAACK,IAAD,CAFb;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,gBAAgB,EAAEV,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAoBD,GAxBH,CADF;AA4BD","sourcesContent":["import Icon from \"@components/@core/icon\";\nimport loadable from \"@loadable/component\";\nimport React from \"react\";\nimport { getIcons } from \"@utils/getIcons\";\n\nimport SearchPageIconLoading from \"./loading\";\n\nexport default function SearchIconSet({ icon, query, setResults, highlightPattern }) {\n  const IconSet = loadable.lib(() => getIcons(icon.id));\n\n  return (\n    <IconSet fallback={<SearchPageIconLoading />}>\n      {({ default: icons }) => {\n        const found = Object.keys(icons)\n          .filter(name => name.toLowerCase().includes(query))\n        return (\n          <>\n            {found.map(name => (\n              <Icon\n                key={name}\n                icon={icons[name]}\n                name={name}\n                highlightPattern={highlightPattern}\n              />\n            ))}\n            {/*{setResults(prevResults => {*/}\n            {/*  return prevResults.hasOwnProperty(icon.id) ?*/}\n            {/*    prevResults :*/}\n            {/*    {*/}\n            {/*        ...prevResults,*/}\n            {/*      [icon.id]: found.length*/}\n            {/*    }*/}\n            {/*})}*/}\n          </>\n        )\n      }}\n    </IconSet>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}