{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport toast from \"cogo-toast\";\nimport copy from \"copy-to-clipboard\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport PrismTheme from \"prism-react-renderer/themes/nightOwl\";\nimport React from \"react\";\nimport { IoMdClipboard } from \"react-icons/io\";\nexport default function CodeBlock({\n  code\n}) {\n  const copyToClipboard = () => {\n    copy(code);\n    toast.success(`Copied to clipboard`, {\n      position: \"bottom-center\"\n    });\n  };\n\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    theme: PrismTheme,\n    code: code.trim(),\n    language: \"jsx\"\n  }), ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => __jsx(\"pre\", {\n    className: `${className} code`,\n    style: style\n  }, __jsx(\"a\", {\n    onClick: copyToClipboard,\n    className: \"prism-code--copy\"\n  }, __jsx(IoMdClipboard, null)), tokens.map((line, i) => __jsx(\"div\", getLineProps({\n    line,\n    key: i\n  }), line.map((token, key) => __jsx(\"span\", getTokenProps({\n    token,\n    key\n  })))))));\n}","map":null,"metadata":{},"sourceType":"module"}