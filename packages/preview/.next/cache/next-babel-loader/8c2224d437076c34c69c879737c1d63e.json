{"ast":null,"code":"var _jsxFileName = \"/home/ggavilan/side/react-icons/packages/preview/src/components/@core/sidebar/index.tsx\";\nvar __jsx = React.createElement;\nimport { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\nconst searchPath = \"/search\";\nexport default function Sidebar() {\n  const iconsList = ALL_ICONS.sort((a, b) => a.name > b.name ? 1 : -1);\n  const router = useRouter();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    query,\n    setQuery,\n    setResults\n  } = React.useContext(Context);\n\n  const onSearch = e => {\n    const query = e.target.value.toLowerCase();\n    router.push({\n      pathname: searchPath,\n      query: {\n        q: query\n      }\n    });\n    setQuery(query);\n    setResults(prevResult => {\n      return {};\n    });\n  };\n\n  const goToSearch = e => {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  const onBlur = event => {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  const clearQuery = () => {\n    setQuery(\"foo\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar pt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"search p2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"search\",\n    className: \"px2 py1\",\n    placeholder: \"\\uD83D\\uDD0D Search Icons\",\n    onFocus: goToSearch,\n    onBlur: onBlur,\n    onChange: onSearch,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), __jsx(\"ul\", {\n    className: `sidebar--links ${isOpen && \"active\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(ActiveLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Home\"))), iconsList.map(icon => __jsx(\"li\", {\n    key: icon.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(ActiveLink, {\n    href: {\n      pathname: \"icons\",\n      query: {\n        name: icon.id\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"rounded px2 py1\",\n    onClickCapture: clearQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, icon.name))))));\n}","map":{"version":3,"sources":["/home/ggavilan/side/react-icons/packages/preview/src/components/@core/sidebar/index.tsx"],"names":["ALL_ICONS","Context","useRouter","React","useState","ActiveLink","Heading","searchPath","Sidebar","iconsList","sort","a","b","name","router","isOpen","setIsOpen","query","setQuery","setResults","useContext","onSearch","e","target","value","toLowerCase","push","pathname","q","prevResult","goToSearch","asPath","includes","onBlur","event","length","window","history","back","clearQuery","map","icon","id"],"mappings":"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","sourcesContent":["import { ALL_ICONS } from \"@utils/icon\";\nimport { Context } from \"@utils/search-context\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\n\nimport ActiveLink from \"../active-link\";\nimport Heading from \"../heading\";\n\nconst searchPath = \"/search\";\n\nexport default function Sidebar() {\n  const iconsList = ALL_ICONS.sort((a, b) => (a.name > b.name ? 1 : -1));\n  const router = useRouter();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { query, setQuery, setResults } = React.useContext(Context);\n\n  const onSearch = e => {\n    const query = e.target.value.toLowerCase();\n    router.push({ pathname: searchPath, query: { q: query } });\n    setQuery(query);\n    setResults(prevResult => {\n      return {}\n    });\n  };\n\n  const goToSearch = e => {\n    if (!router.asPath.includes(searchPath)) router.push(searchPath);\n  };\n\n  const onBlur = event => {\n    if (event.target.value.length === 0) {\n      window && window.history.back();\n    }\n  };\n\n  const clearQuery = () => {\n    setQuery(\"foo\");\n  }\n\n  return (\n    <div className=\"sidebar pt3\">\n      <Heading isOpen={isOpen} setIsOpen={setIsOpen} />\n\n      <div className=\"search p2\">\n        <input\n          type=\"text\"\n          aria-label=\"search\"\n          className=\"px2 py1\"\n          placeholder=\"🔍 Search Icons\"\n          onFocus={goToSearch}\n          onBlur={onBlur}\n          onChange={onSearch}\n          value={query}\n        />\n      </div>\n\n      <ul className={`sidebar--links ${isOpen && \"active\"}`}>\n        <li>\n          <ActiveLink href=\"/\">\n            <a className=\"rounded px2 py1\">Home</a>\n          </ActiveLink>\n        </li>\n        {iconsList.map(icon => (\n          <li key={icon.id}>\n            <ActiveLink href={{ pathname: \"icons\", query: { name: icon.id } }}>\n              <a className=\"rounded px2 py1\" onClickCapture={clearQuery}>{icon.name}</a>\n            </ActiveLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}